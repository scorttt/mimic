import "main.del";

globalvar Boolean inspector; // inspector toggle
disabled rule: "---------------- Debug ----------------"{}


// rule: "[DBG] :: Bot Teleport Visual"
// Event.OngoingPlayer
// if (!IsDummyBot())
// {
//     CreateEffect(player, Effect.Sphere, Color.Red, RayCastHitPosition((PositionOf() + Vector(0, 0.2, 0)), (PositionOf() + Vector(0, 0.2, 0)) + WorldVectorOf(Vector(0, 0, -3), player)), 0.1);
// }

// rule: "[DBG] :: CC All Bots"
// Event.OngoingPlayer
// if (!IsDummyBot())
// if (IsInteractHeld())
// {
//     SetStatus(FilteredArray(AllPlayers(), IsDummyBot(Curr())), null, Status.Stunned, 5);
// }

// rule: "[DBG] :: CC Owner Bots"
// Event.OngoingPlayer
// if (!IsDummyBot())
// if (IsInteractHeld())
// {
//     SetStatus(owner_bots, null, Status.Asleep, 5);
// }

// rule: "[DBG] :: CC"
// Event.OngoingPlayer
// if (!IsDummyBot())
// if (IsInteractHeld())
// {
//     SetStatus(player, null, Status.Asleep, 12);
// }

// rule: "[DBG] :: Kill All Bots"
// Event.OngoingPlayer
// if (!IsDummyBot())
// if (IsInteractHeld())
// {
//     Kill(FilteredArray(AllPlayers(), IsDummyBot(Curr())));
// }

// rule: "[DBG] :: Kill Owner Bots"
// Event.OngoingPlayer
// if (!IsDummyBot())
// if (IsButtonHeld(player, Button.Interact))
// {
//     Kill(owner_bots);
// }

// rule: "[DBG] :: Kill"
// Event.OngoingPlayer
// if (!IsDummyBot())
// if (IsButtonHeld(player, Button.Interact))
// {
//     Kill();
// }

// rule: "[DBG] :: Randomly damage all bots"
// Event.OngoingPlayer
// if (!IsDummyBot())
// if (IsButtonHeld(player, Button.Interact))
// {

//     for (Number i = 0; i < owner_bots.Length; i++)
//     {
//         Heal(owner_bots[i], null, 1000);
//         Damage(owner_bots[i], null, RandomReal(0, Health(owner_bots[i]) - 1));
//     }
// }

// rule: "[DBG] :: Kill All"
// Event.OngoingPlayer
// if (!IsDummyBot())
// if (IsInteractHeld())
// {
//     Kill(all);
// }

// rule: "[DBG] :: Ult"
// Event.OngoingPlayer
// if (!IsDummyBot())
// if (IsInteractHeld())
// {
//     SetUltimateCharge(player, 100);
// }

// rule: "[DBG] :: Kill Team 2"
// Event.OngoingPlayer
// if (IsButtonHeld(host, Button.Interact))
// {
//     Kill(PlayersInSlot(0, Team.Team2));
//     MinWait();
//     Kill(FilteredArray(AllPlayers(Team.Team2), IsDummyBot(Curr()) && Curr().owner == player));
// }

// rule: "[DBG] :: Damage"
// Event.OngoingPlayer
// if (IsInteractHeld())
// {
//     SetPlayerHealth(all, 1);
// }

// rule: "[DBG] :: Server Stats"
// {
//     CreateHudText(host, null, "Cur", <"<0>%", Near(ServerLoad() / 2.55)>, Location.Right, 22, Color.White, Color.White, Color.White, HudTextRev.VisibleToSortOrderStringAndColor);
//     CreateHudText(host, null, "Avg", <"<0>%", Near(ServerLoadAverage() / 2.55)>, Location.Right, 23, Color.White, Color.White, Color.White, HudTextRev.VisibleToSortOrderStringAndColor);
//     CreateHudText(host, null, "Peak", <"<0>%", Near(ServerLoadPeak() / 2.55)>, Location.Right, 24, Color.White, Color.White, Color.White, HudTextRev.VisibleToSortOrderStringAndColor);
//     CreateHudText(host, null, "Ent", EntityCount(), Location.Right, 26, Color.White, Color.White, Color.White, HudTextRev.VisibleToSortOrderStringAndColor);
//     CreateHudText(host, null, "Txt", TextCount() - 7, Location.Right, 27, Color.White, Color.White, Color.White, HudTextRev.VisibleToSortOrderStringAndColor);
// }

// rule: "[DBG] :: HUD"
// Event.OngoingPlayer
// if (!IsDummyBot())
// {

//     CreateHudText(player, null, null, <"is_rezzing: <0>", is_rezzing>, Location.Right, 1.1);
//     CreateHudText(player, null, null, <"cced: <0>", cced>, Location.Right, 1.2);
//     CreateHudText(player, null, null, <"owner_alive: <0>", owner_alive>, Location.Right, 1.3);
//     MinWait();

//     CreateHudText(player, null, null, <"Holding PrimaryFire: <0>", IsButtonHeld(player, Button.PrimaryFire)>, Location.Right, 1.6);
//     CreateHudText(player, null, null, <"IsFiringPrimary(): <0>\n", IsFiringPrimary()>, Location.Right, 1.7);

//     CreateHudText(player, null, null, <"Holding SecondayFire: <0>", IsButtonHeld(player, Button.SecondaryFire)>, Location.Right, 1.8);
//     CreateHudText(player, null, null, <"IsFiringSecondary(): <0>\n", IsFiringSecondary()>, Location.Right, 1.9);

//     CreateHudText(player, null, null, <"Holding Ability1: <0>", IsButtonHeld(player, Button.Ability1)>, Location.Right, 2);
//     CreateHudText(player, null, null, <"IsUsingAbility1(): <0>\n", IsUsingAbility1()>, Location.Right, 2.1);
//     MinWait();

//     CreateHudText(player, null, null, <"Holding Ability2: <0>", IsButtonHeld(player, Button.Ability2)>, Location.Right, 2.2);
//     CreateHudText(player, null, null, <"IsUsingAbility2(): <0>\n", IsUsingAbility2()>, Location.Right, 2.3);

//     CreateHudText(player, null, null, <"Holding Jump: <0>", IsButtonHeld(player, Button.Jump)>, Location.Right, 2.4);
//     CreateHudText(player, null, null, <"IsJumping(): <0>\n", IsJumping()>, Location.Right, 2.5);

//     CreateHudText(player, null, null, <"Holding Crouch: <0>", IsButtonHeld(player, Button.Crouch)>, Location.Right, 2.6);
//     CreateHudText(player, null, null, <"IsCrouching(): <0>\n", IsCrouching()>, Location.Right, 2.7);
//     MinWait();

//     CreateHudText(player, null, null, <"Holding Melee: <0>", IsButtonHeld(player, Button.Melee)>, Location.Right, 2.8);
//     CreateHudText(player, null, null, <"IsMeleeing(): <0>\n", IsMeleeing()>, Location.Right, 2.9);

//     CreateHudText(player, null, null, <"Holding Reload: <0>", IsButtonHeld(player, Button.Reload)>, Location.Right, 3);
//     CreateHudText(player, null, null, <"IsReloading(): <0>", IsReloading()>, Location.Right, 3.1);
//     }
